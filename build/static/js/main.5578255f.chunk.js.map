{"version":3,"sources":["components/Note.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Footer","style","color","fontStyle","fontSize","axios","get","newObject","post","id","put","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","setErrorMessage","useEffect","noteService","then","response","data","notesToShow","filter","map","key","find","n","changedNote","catch","err","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteobject","date","Date","toISOString","Math","random","concat","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"kNAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAEZC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACI,wBAAIC,UAAU,QACTJ,EAAKK,QACN,4BAAQC,QAASL,GAAjB,IAAqCC,EAArC,OCWKK,EAjBF,WAOX,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,qGACA,6BACA,2C,gBCCO,EAZA,WACX,OAAOC,IAAMC,IAHD,eAcD,EARA,SAACC,GACZ,OAAOF,IAAMG,KAPD,aAOeD,IAOhB,EAJA,SAACE,EAAIF,GAChB,OAAOF,IAAMK,IAAN,UAXK,aAWL,YAAwBD,GAAOF,ICqF3BI,EA3FH,SAACC,GAAW,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEWF,mBAC1B,iBAHe,mBAEZG,EAFY,KAEHC,EAFG,OAKWJ,oBAAS,GALpB,mBAKZK,EALY,KAKHC,EALG,OAMqBN,mBAAS,gCAN9B,mBAMEO,GANF,WAQjBC,qBAAW,WACPC,IAEWC,MAAM,SAAAC,GACHT,EAASS,EAASC,WAEjC,IAEL,IAAMC,EAAcR,EACdJ,EACAA,EAAMa,QAAO,SAAAlC,GAAI,OAAuB,IAAnBA,EAAKG,aA0ChC,OACI,6BACI,qCAEA,6BACI,4BAAQG,QAAW,kBAAMoB,GAAaD,KAAtC,OACSA,EAAU,YAAc,QAGrC,4BAECQ,EAAYE,KAAI,SAAAnC,GAAI,OACvB,kBAAC,EAAD,CAAMoC,IAAKpC,EAAKgB,GAChBhB,KAAMA,EACNC,iBAAmB,kBA/BE,SAAAe,GACvB,IAAMhB,EAAOqB,EAAMgB,MAAK,SAAAC,GAAC,OAAIA,EAAEtB,KAAOA,KAChCuB,EAAW,2BAAQvC,GAAR,IAAcG,WAAYH,EAAKG,YAEhD0B,EACUb,EAAIuB,GACXT,MAAK,SAAAC,GACJT,EAASD,EAAMc,KAAI,SAAAnC,GAAI,OAAIA,EAAKgB,KAAOA,EAAKhB,EAAO+B,EAASC,YAE7DQ,OAAO,SAAAC,GACJd,EAAgB,IAAD,OAAK3B,EAAKK,QAAV,yCACfqC,YAAY,kBAAMf,EAAgB,QAAO,KACzCL,EAASD,EAAMa,QAAO,SAAAI,GAAC,OAAIA,EAAEtB,KAAOA,SAmBf2B,CAAmB3C,EAAKgB,WAI/C,0BAAM4B,SA1DE,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAa,CACf1C,QAASkB,EACTyB,MAAM,IAAIC,MAAOC,cACjB/C,UAAYgD,KAAKC,SAAW,IAGhCvB,EACgBkB,GACPjB,MAAM,SAAAC,GACHT,EAASD,EAAMgC,OAAOtB,EAASC,OAC/BR,EAAW,SA+Cf,2BAAO8B,MAAS/B,EAAUgC,SAzCb,SAACV,GACtBW,QAAQC,IAAIZ,EAAMa,OAAOJ,OACzB9B,EAAWqB,EAAMa,OAAOJ,UAsCpB,IACgE,IACxD,4BAAQK,KAAO,UAAf,SAER,kBAAC,EAAD,Q,MCnFZC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5578255f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n\n    const label = note.important ? \"make not important\" : \"make important\";\n    return (\n        <li className=\"note\">\n            {note.content}\n            <button onClick={toggleImportance}> {label} </button>\n        </li>\n\n    );\n};\n\nexport default Note;","import React from 'react';\n\nconst Footer = () => {\n    const footerStyle = {\n      color: 'green',\n      fontStyle: 'italic',\n      fontSize: 16\n    }\n  \n    return (\n      <div style={footerStyle}>\n        <br />\n        <em>Note app, Department of Physical Sciences, University of Nairobi 2020</em>\n        <br />\n        <em>@jim_4067</em>\n      </div> \n    )\n  }\n\n  export default Footer;\n","import axios from 'axios';\nconst baseUrl = '/api/notes';\n\nconst getAll = () => {\n    return axios.get(baseUrl);\n}\n\nconst create = (newObject) => {\n    return axios.post(baseUrl, newObject);\n} \n\nconst update = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}` , newObject);\n} \n\nexport default {\n    getAll : getAll,\n    create : create, \n    update : update\n}","import React, {useState, useEffect} from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification'\nimport Footer from './components/Footer';\nimport noteService from './services/notes';\n\nconst App = (props) => {\n    const [notes, setNotes] = useState([]);\n    const [newNote, setNewNote] = useState(\n        \"a new note...\"\n    );\n    const [showAll, setShowAll] = useState(true);\n    const [errorMessage, setErrorMessage] = useState(\"shit!!! something went wrong\")\n      \n      useEffect( () => {\n          noteService\n                    .getAll()\n                    .then( response => {\n                        setNotes(response.data);\n                    } );\n      }, [] )\n\n    const notesToShow = showAll \n        ? notes \n        : notes.filter(note => note.important === true)\n\n    const addNote = (event) => {\n        event.preventDefault();\n        const noteobject = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important : Math.random() < 0.5,\n        };\n      \n        noteService\n                .create(noteobject)\n                .then( response => {\n                    setNotes(notes.concat(response.data) );\n                    setNewNote(\"\");\n                })\n    };\n\n   \n\n    const handleNoteChange = (event) => {\n        console.log(event.target.value);\n        setNewNote(event.target.value);\n    };\n\n    const toggleImportanceOf = id => {\n        const note = notes.find(n => n.id === id)\n        const changedNote = { ...note, important: !note.important }\n    \n        noteService\n          .update(id, changedNote)\n          .then(response => {\n            setNotes(notes.map(note => note.id !== id ? note : response.data))\n          })\n          .catch( err => {\n              setErrorMessage(` ${note.content} was already removed from the server`);\n              setTimeout( () => setErrorMessage(null), 5000);\n              setNotes(notes.filter(n => n.id !== id) )\n          })\n      }\n\n\n    return (\n        <div>\n            <h1>Notes</h1>\n            {/*<Notification message={errorMessage} /> */}\n            <div>\n                <button onClick = {() => setShowAll (!showAll)}>\n                    show{showAll ? \"important\" : \"all\"}\n                </button>\n            </div>\n            <ul>\n                \n            {notesToShow.map(note =>\n          <Note key={note.id} \n          note={note} \n          toggleImportance={ () => toggleImportanceOf(note.id)}\n          />\n        )}\n            </ul>\n            <form onSubmit = {addNote} >\n                <input value = {newNote}  onChange = {handleNoteChange} /> {\" \"}\n                    <button type = \"submit\" >save</button>\n            </form>\n            <Footer />\n        </div>\n    );\n};\n\n\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css';\n\nReactDOM.render(<App /> ,document.getElementById(\"root\") );"],"sourceRoot":""}